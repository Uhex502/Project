{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\saudk\\\\Desktop\\\\Senior\\\\Project\\\\client\\\\src\\\\Dashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Dashboard() {\n  _s();\n  const [devices, setDevices] = useState([]);\n  const [newDevice, setNewDevice] = useState({\n    id: '',\n    type: '',\n    location: '',\n    status: false\n  });\n  useEffect(() => {\n    fetchDevices();\n  }, []);\n  const fetchDevices = async () => {\n    try {\n      const response = await axios.get('/api/device');\n      setDevices(response.data);\n    } catch (error) {\n      console.error('Error fetching devices:', error);\n    }\n  };\n  const handleInputChange = event => {\n    setNewDevice({\n      ...newDevice,\n      [event.target.name]: event.target.value\n    });\n  };\n  const handleSubmit = async event => {\n    event.preventDefault();\n    try {\n      const response = await axios.post('/api/device', newDevice);\n      setDevices([...devices, response.data]);\n      setNewDevice({\n        id: '',\n        type: '',\n        location: '',\n        status: false\n      }); // Reset form\n    } catch (error) {\n      console.error('Error adding new device:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Device Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"id\",\n        value: newDevice.id,\n        onChange: handleInputChange,\n        placeholder: \"Device ID\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"type\",\n        value: newDevice.type,\n        onChange: handleInputChange,\n        placeholder: \"Device Type\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"location\",\n        value: newDevice.location,\n        onChange: handleInputChange,\n        placeholder: \"Location\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Add Device\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: devices.map(device => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [\"ID: \", device.id, \", Type: \", device.type, \", Location: \", device.location, \", Status: \", device.status ? 'On' : 'Off']\n      }, device.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n}\n_s(Dashboard, \"YSMqnK9S+ZeZwMWxowZwsBegopQ=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","Dashboard","_s","devices","setDevices","newDevice","setNewDevice","id","type","location","status","fetchDevices","response","get","data","error","console","handleInputChange","event","target","name","value","handleSubmit","preventDefault","post","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","onChange","placeholder","required","map","device","_c","$RefreshReg$"],"sources":["C:/Users/saudk/Desktop/Senior/Project/client/src/Dashboard.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nfunction Dashboard() {\r\n  const [devices, setDevices] = useState([]);\r\n  const [newDevice, setNewDevice] = useState({ id: '', type: '', location: '', status: false });\r\n\r\n  useEffect(() => {\r\n    fetchDevices();\r\n  }, []);\r\n\r\n  const fetchDevices = async () => {\r\n    try {\r\n      const response = await axios.get('/api/device');\r\n      setDevices(response.data);\r\n    } catch (error) {\r\n      console.error('Error fetching devices:', error);\r\n    }\r\n  };\r\n\r\n  const handleInputChange = (event) => {\r\n    setNewDevice({ ...newDevice, [event.target.name]: event.target.value });\r\n  };\r\n\r\n  const handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n    try {\r\n      const response = await axios.post('/api/device', newDevice);\r\n      setDevices([...devices, response.data]);\r\n      setNewDevice({ id: '', type: '', location: '', status: false }); // Reset form\r\n    } catch (error) {\r\n      console.error('Error adding new device:', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Device Dashboard</h2>\r\n\r\n      {/* Device Form */}\r\n      <form onSubmit={handleSubmit}>\r\n        <input\r\n          type=\"text\"\r\n          name=\"id\"\r\n          value={newDevice.id}\r\n          onChange={handleInputChange}\r\n          placeholder=\"Device ID\"\r\n          required\r\n        />\r\n        <input\r\n          type=\"text\"\r\n          name=\"type\"\r\n          value={newDevice.type}\r\n          onChange={handleInputChange}\r\n          placeholder=\"Device Type\"\r\n          required\r\n        />\r\n        <input\r\n          type=\"text\"\r\n          name=\"location\"\r\n          value={newDevice.location}\r\n          onChange={handleInputChange}\r\n          placeholder=\"Location\"\r\n          required\r\n        />\r\n        <button type=\"submit\">Add Device</button>\r\n      </form>\r\n\r\n      {/* Device List */}\r\n      <ul>\r\n        {devices.map(device => (\r\n          <li key={device.id}>\r\n            ID: {device.id}, Type: {device.type}, Location: {device.location}, Status: {device.status ? 'On' : 'Off'}\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Dashboard;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}