{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\saudk\\\\Desktop\\\\Senior\\\\Project\\\\client\\\\src\\\\BudgetSetter.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './BudgetSetter.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_BASE = \"http://localhost:3001\";\nfunction BudgetSetter() {\n  _s();\n  const [budget, setBudget] = useState('');\n  const [currentBudget, setCurrentBudget] = useState(null);\n  useEffect(() => {\n    fetchCurrentBudget();\n  }, []);\n  const fetchCurrentBudget = async () => {\n    try {\n      const response = await axios.get(`${API_BASE}/budget`);\n      // Assuming the response contains the budget directly or as part of an object\n      // Adjust this line according to your actual response structure\n      const budgetValue = response.data.budget ? response.data.budget : response.data;\n      setCurrentBudget(budgetValue);\n    } catch (error) {\n      console.error('Error fetching budget:', error);\n    }\n  };\n  const deleteExistingBudgets = async () => {\n    try {\n      await axios.delete(`${API_BASE}/deletebudget`);\n    } catch (error) {\n      console.error('Error deleting existing budgets:', error);\n    }\n  };\n  const handleSubmit = async event => {\n    event.preventDefault();\n    try {\n      await deleteExistingBudgets();\n      await axios.post(`${API_BASE}/newbudget`, {\n        budget\n      });\n      alert('Budget set successfully');\n      fetchCurrentBudget();\n    } catch (error) {\n      console.error('Error setting budget:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"budget-setter\",\n    children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n      children: \"Set Your Budget\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      className: \"budget-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        value: budget,\n        onChange: e => setBudget(e.target.value),\n        placeholder: \"Enter your budget\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Set Budget\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), currentBudget !== null && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"current-budget\",\n      children: [\"Current Budget: \", currentBudget]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n}\n_s(BudgetSetter, \"zONTe7vteazX0uNaBLfuRNgOaJs=\");\n_c = BudgetSetter;\nexport default BudgetSetter;\nvar _c;\n$RefreshReg$(_c, \"BudgetSetter\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","API_BASE","BudgetSetter","_s","budget","setBudget","currentBudget","setCurrentBudget","fetchCurrentBudget","response","get","budgetValue","data","error","console","deleteExistingBudgets","delete","handleSubmit","event","preventDefault","post","alert","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","value","onChange","e","target","placeholder","_c","$RefreshReg$"],"sources":["C:/Users/saudk/Desktop/Senior/Project/client/src/BudgetSetter.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport './BudgetSetter.css';\r\n\r\nconst API_BASE = \"http://localhost:3001\";\r\n\r\nfunction BudgetSetter() {\r\n  const [budget, setBudget] = useState('');\r\n  const [currentBudget, setCurrentBudget] = useState(null);\r\n\r\n  useEffect(() => {\r\n    fetchCurrentBudget();\r\n  }, []);\r\n\r\n  const fetchCurrentBudget = async () => {\r\n    try {\r\n      const response = await axios.get(`${API_BASE}/budget`);\r\n      // Assuming the response contains the budget directly or as part of an object\r\n      // Adjust this line according to your actual response structure\r\n      const budgetValue = response.data.budget ? response.data.budget : response.data;\r\n      setCurrentBudget(budgetValue);\r\n    } catch (error) {\r\n      console.error('Error fetching budget:', error);\r\n    }\r\n  }\r\n\r\n  const deleteExistingBudgets = async () => {\r\n    try {\r\n      await axios.delete(`${API_BASE}/deletebudget`);\r\n    } catch (error) {\r\n      console.error('Error deleting existing budgets:', error);\r\n    }\r\n  };\r\n\r\n  const handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n    try {\r\n      await deleteExistingBudgets();\r\n      await axios.post(`${API_BASE}/newbudget`, { budget });\r\n      alert('Budget set successfully');\r\n      fetchCurrentBudget();\r\n    } catch (error) {\r\n      console.error('Error setting budget:', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"budget-setter\">\r\n      <h4>Set Your Budget</h4>\r\n      <form onSubmit={handleSubmit} className=\"budget-form\">\r\n        <input\r\n          type=\"number\"\r\n          value={budget}\r\n          onChange={(e) => setBudget(e.target.value)}\r\n          placeholder=\"Enter your budget\"\r\n        />\r\n        <button type=\"submit\">Set Budget</button>\r\n      </form>\r\n      {currentBudget !== null && (\r\n        <div className=\"current-budget\">\r\n          Current Budget: {currentBudget}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default BudgetSetter;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}